<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.white.mapper.SysUserMapper">

    <sql id="selectColumns">
        SELECT
            su.id,
            su.username,
            su.password,
            su.userNameCn,
            su.userNameEN,
            su.enabled,
            su.remarks,
            su.create_date,
            su.update_date
        FROM sys_user su
    </sql>

    <!-- 根据编号获取用户 -->
    <select id="get" resultType="com.white.entity.system.SysUser">
        <include refid="selectColumns" />
        WHERE su.id = #{id}
    </select>

    <!-- 根据登录名获取用户 -->
    <select id="getUserByUserName" resultType="com.white.entity.system.SysUser">
        <include refid="selectColumns" />
        WHERE su.username = #{username}
    </select>

    <!-- 查询全部用户 -->
    <select id="findAllList" resultType="com.white.entity.system.SysUser">
        <include refid="selectColumns"/>
        WHERE su.del_flag = '0'
        ORDER BY su.create_date
    </select>

    <!-- 分页查询用户信息 -->
    <select id="findList" resultType="com.white.entity.system.SysUser">
        <include refid="selectColumns"/>
        WHERE su.del_flag = '0'
        <if test="username != null and username != ''">
            <!--AND su.username like CONCAT('%', #{username}, '%')-->
            AND su.username = #{username}
        </if>
        <if test="enabled != null">
            AND su.enabled = #{enabled}
        </if>
        ORDER BY su.create_date
    </select>

    <!-- 插入用户 -->
    <insert id="insert">
        INSERT INTO sys_user
            (
                id,
                username,
                password,
                userNameCn,
                userNameEN,
                enabled,
                remarks,
                create_date,
                update_date
            ) VALUES (
                #{id},
                #{username},
                #{password},
                #{userNameCn},
                #{userNameEn},
                #{enabled},
                #{remarks},
                #{createDate},
                #{updateDate}
            )
    </insert>

    <!-- 更新用户 -->
    <update id="update">
        UPDATE sys_user
        <set>
            username = #{username},
            <if test="password != null and password != '' ">
                password = #{password},
            </if>
            enabled = #{enabled},
            update_date = #{updateDate},
            remarks = #{remarks}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 保存用户信息 -->
    <update id="updateInfo">
        UPDATE sys_user
        <set>
            update_date = #{updateDate},
            remarks = #{remarks}
        </set>
        WHERE id = #{id}
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePasswordByUserId">
        UPDATE sys_user
        SET password = ${password}
        WHERE id = ${id}
    </update>

    <!-- 删除用户 -->
    <update id="deleteById">
        UPDATE sys_user
        SET del_flag = '1'
        WHERE id = #{id}
    </update>

    <!-- 删除用户和角色关联表数据 -->
    <delete id="deleteUserRole">
        DELETE FROM sys_user_role
        WHERE user_id = #{id}
    </delete>

    <!-- 插入用户和角色关联表数据 -->
    <insert id="insertUserRole">
        INSERT INTO sys_user_role(user_id, role_id)
        <foreach collection="roles" item="role" separator=" union all ">
            SELECT #{id}, #{role.id} FROM dual
        </foreach>
    </insert>

</mapper>
